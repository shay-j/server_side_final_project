#!/usr/bin/env node

'use strict';

const app = require('../src/app');
const debug = require('debug')('server-side-final-project:server');
const http = require('http');

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

const server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  const portNum = parseInt(val, 10);
  if (Number.isNaN(portNum)) return val;
  if (portNum >= 0) return portNum;
  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') throw error;
  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES': console.error(bind + ' requires elevated privileges'); process.exit(1); return
    case 'EADDRINUSE': console.error(bind + ' is already in use'); process.exit(1); return
    default: throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}